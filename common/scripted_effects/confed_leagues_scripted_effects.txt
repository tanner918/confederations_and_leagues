
### This effect is how the name of the elevated confederation/league title is determined, to make sure that the confederation/league's name is properly carried over, instead of magically changing to be culture-based.
## AVAILABLE INPUTS:
# root/scope:confederation_offerer = Saved scope of the character taking the "Elevate Confederation/League" decision
# scope:old_confederation = Saved scope of the confederation the character was in
# $TITLE_TIER$ = Tier of the title to be created. Based of the base game, it will normally be kingdom, but if I decide to allow kingdoms into confederations/leagues, then I might also need to look into doing empire tier as well.

CL_determine_elevated_title_name = {
	if = { ## Determine kingdom name for a "League"
		limit = {
			OR = {
				scope:old_confederation = {
					has_variable = confed_type
					var:confed_type = flag:CL_type_league
				}
				# This is just in case somehow the league wasn't given the confed_type variable
				AND = {
					NOT = {
						scope:old_confederation = { has_variable = confed_type }
					}
					scope:confederation_offerer = { CL_uses_leagues = yes }
				}
			}
		}

		if = { # Name League Kingdom based off the culture it was named after
			limit = {
				scope:old_confederation = { has_variable = confederation_culture }
			}
			
			scope:old_confederation.var:confederation_culture = {
				save_scope_as = confederation_culture # For localization
			}

			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = LEAGUE_KINGDOM_CULTURE_NAME
				adj = CONFEDERATION_KINGDOM_CULTURE_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}

			scope:new_title = {
				set_variable = {
					name = confederation_culture
					value = scope:confederation_culture
				}
			}
		}
		else_if = { # Name League Kingdom based off the faith it was named after
			limit = {
				scope:old_confederation = { has_variable = confederation_faith }
			}
			
			scope:old_confederation.var:confederation_faith = {
				save_scope_as = confederation_faith # For localization
			}
			
			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = LEAGUE_KINGDOM_FAITH_NAME
				adj = CONFEDERATION_KINGDOM_FAITH_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}

			scope:new_title = {
				set_variable = {
					name = confederation_faith
					value = scope:confederation_faith
				}
			}
		}
		else_if = { # Name League Kingdom based off the duchy it was named after
			limit = {
				scope:old_confederation = { has_variable = duchy_title_name }
			}
			
			scope:old_confederation.var:duchy_title_name = {
				save_scope_as = duchy_title_name # For localization
			}
			
			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = LEAGUE_KINGDOM_DUCHY_NAME
				adj = CONFEDERATION_KINGDOM_DUCHY_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}
		}
		else_if = { # Name League Kingdom based off the historical league it was named after
			# NOTE: Make sure the associated entry for historical confederations/leagues is present in the CL_determine_name effect below to allow these confederations/leagues to be formed. Also, if the associated confederation/league should have a special culture created for them, make sure to include the creation of that culture at the end of the effect block in confederation_kingdom_decision
			limit = {
				scope:old_confederation = { has_variable = historical_confed_league }
			}
			
			switch = {
				trigger = scope:old_confederation.var:historical_confed_league

				flag:cl_peloponnesian_league = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_peloponnesian_league
						adj = cl_peloponnesian_league_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_peloponnesian_league
						}
					}
				}
				flag:cl_delian_league = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_delian_league
						adj = cl_delian_league_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_delian_league
						}
					}
				}
				flag:cl_aetolian_league = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_aetolian_league
						adj = cl_aetolian_league_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_aetolian_league
						}
					}
				}
				flag:cl_lombard_league = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_lombard_league
						adj = cl_lombard_league_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_lombard_league
						}
					}
				}
			}
		}

		# Save variable in title so that, if needed later, it is known that the title represents a league-kingdom
		scope:new_title = {
			set_variable = {
				name = confed_type
				value = flag:CL_type_league
			}
		}
	}
	else_if = { ## Determine kingdom name for a "Confederation"
		limit = {
			OR = {
				scope:old_confederation = {
					has_variable = confed_type
					var:confed_type = flag:CL_type_confederation
				}
				# This is just in case somehow the confederation wasn't given the confed_type variable
				AND = {
					NOT = {
						scope:old_confederation = { has_variable = confed_type }
					}
					scope:confederation_offerer = { CL_uses_confederations = yes }
				}
			}
		}
		
		if = { # Name Confederation Kingdom based off the culture it was named after
			limit = {
				scope:old_confederation = { has_variable = confederation_culture }
			}
			
			scope:old_confederation.var:confederation_culture = {
				save_scope_as = confederation_culture # For localization
			}
			
			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = CONFEDERATION_KINGDOM_CULTURE_NAME
				adj = CONFEDERATION_KINGDOM_CULTURE_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}

			scope:new_title = {
				set_variable = {
					name = confederation_culture
					value = scope:confederation_culture
				}
			}
		}
		else_if = { # Name Confederation Kingdom based off the faith it was named after
			limit = {
				scope:old_confederation = { has_variable = confederation_faith }
			}
			
			scope:old_confederation.var:confederation_faith = {
				save_scope_as = confederation_faith # For localization
			}
			
			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = CONFEDERATION_KINGDOM_FAITH_NAME
				adj = CONFEDERATION_KINGDOM_FAITH_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}

			scope:new_title = {
				set_variable = {
					name = confederation_faith
					value = scope:confederation_faith
				}
			}
		}
		else_if = { # Name Confederation Kingdom based off the duchy it was named after
			limit = {
				scope:old_confederation = { has_variable = duchy_title_name }
			}
			
			scope:old_confederation.var:duchy_title_name = {
				save_scope_as = duchy_title_name # For localization
			}
			
			create_dynamic_title = {
				tier = $TITLE_TIER$
				name = CONFEDERATION_KINGDOM_DUCHY_NAME
				adj = CONFEDERATION_KINGDOM_DUCHY_NAME_ADJ
				pre = article_CONFEDERATION_CULTURE_NAME
			}
		}
		else_if = { # Name Confederation Kingdom based off the historical confederation it was named after
			# NOTE: Make sure the associated entry for historical confederations/leagues is present in the CL_determine_name effect below to allow these confederations/leagues to be formed. Also, if the associated confederation/league should have a special culture created for them, make sure to include the creation of that culture at the end of the effect block in confederation_kingdom_decision
			limit = {
				scope:old_confederation = { has_variable = historical_confed_league }
			}
			
			switch = {
				trigger = scope:old_confederation.var:historical_confed_league

				flag:cl_masmuda_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_masmuda_confederacy
						adj = cl_masmuda_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_masmuda_confederacy
						}
					}
				}
				flag:cl_zenati_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_zenati_confederacy
						adj = cl_zenati_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_zenati_confederacy
						}
					}
				}
				flag:cl_sanhaja_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_sanhaja_confederacy
						adj = cl_sanhaja_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_sanhaja_confederacy
						}
					}
				}
				flag:cl_kabyle_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_kabyle_confederacy
						adj = cl_kabyle_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_kabyle_confederacy
						}
					}
				}
				flag:cl_chaoui_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_chaoui_confederacy
						adj = cl_chaoui_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_chaoui_confederacy
						}
					}
				}
				flag:cl_mozabite_confederacy = {
					create_dynamic_title = {
						tier = $TITLE_TIER$
						name = cl_mozabite_confederacy
						adj = cl_mozabite_confederacy_adj
						pre = article_CONFEDERATION_CULTURE_NAME
					}
					scope:new_title = {
						set_variable = {
							name = historical_confed_league
							value = flag:cl_mozabite_confederacy
						}
					}
				}
			}
		}

		# Save variable in title so that, if needed later, it is known that the title represents a confederation-kingdom
		scope:new_title = {
			set_variable = {
				name = confed_type
				value = flag:CL_type_confederation
			}
		}
	}
}

### This effect is how the name of the confederation/league is determined.
## AVAILABLE INPUTS:
# scope:actor = Character who invited another ruler to join a confederation through the offer_confederation_interaction
# scope:recipient = Character who received and accepted the invite to join a confederation

# This effect will likely be called from within scope:actor
# The offer_confederation_interaction, which ultimately is what makes this effect get called, already checks that scope:actor and scope:recipient are allowed in the same league/confederation, so only need to check one when deciding which to form

CL_determine_name = {
	if = { # It is a Defensive League being formed
		limit = {
			CL_uses_leagues = yes
		}

		## With the relevant game rules, allow historical league names to appear
		# NOTE: Whenever adding a new historical defensive league here, make sure to also add the appropriate entry in the above CL_determine_elevated_title_name effect
		if = { # Peloponnesian League
			limit = {
				# Need to have relevant game rule(s)
				has_game_rule = CL_historical_names_all
				# Need to have relevant culture/heritage
				culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				scope:recipient.culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = title:d_achaia
					scope:recipient.capital_county.duchy = title:d_achaia
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_peloponnesian_league
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_peloponnesian_league
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_peloponnesian_league
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_peloponnesian_league
			}
		}
		else_if = { # Delian League
			limit = {
				# Need to have relevant game rule(s)
				has_game_rule = CL_historical_names_all
				# Need to have relevant culture/heritage
				culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				scope:recipient.culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = title:d_athens
					scope:recipient.capital_county.duchy = title:d_athens
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_delian_league
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_delian_league
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_delian_league
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_delian_league
			}
		}
		else_if = { # Aetolian League
			limit = {
				# Need to have relevant game rule(s)
				has_game_rule = CL_historical_names_all
				# Need to have relevant culture/heritage
				culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				scope:recipient.culture = {
					OR = {
						has_cultural_pillar = heritage_byzantine
						has_cultural_pillar = heritage_hellenistic
					}
				}
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = title:d_epirus
					scope:recipient.capital_county.duchy = title:d_epirus
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_aetolian_league
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_aetolian_league
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_aetolian_league
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_aetolian_league
			}
		}
		## create culturally-named duchy title if you both have same culture
		else_if = {
			limit = {
				culture = {	
					this = scope:recipient.culture
				}
				NOT = {
					any_in_global_list = {
						variable = confederations
						has_variable = confederation_culture
						var:confederation_culture = scope:actor.culture
						has_variable = confed_type
						var:confed_type = flag:CL_type_league
					}
				}
			}
			culture = {	
				save_scope_as = confederation_culture
			}
			create_confederation = {
				name = LEAGUE_KINGDOM_CULTURE_NAME
			}
			scope:new_confederation = {
				set_variable = {
					name = confederation_culture
					value = scope:confederation_culture
				}
			}
		}
		## create faith-based confederation if characters have the same faith and meet certain conditions, and a confederation for the faith hasn't been created yet
		else_if = {
			limit = {
				faith = {	
					this = scope:recipient.faith
				}
				NOT = {
					any_in_global_list = {
						variable = confederations
						has_variable = confederation_faith
						var:confederation_faith = scope:actor.faith
						has_variable = confed_type
						var:confed_type = flag:CL_type_league
					}
				}
				CL_faith_based_confed_league_trigger = yes
			}
			faith = {	
				save_scope_as = confederation_faith
			}
			create_confederation = {
				name = LEAGUE_KINGDOM_FAITH_NAME
			}
			scope:new_confederation = {
				set_variable = {
					name = confederation_faith
					value = scope:confederation_faith
				}
			}
		}
		## Duchy title fallback
		else = {
			#You two are in the same duchy, name it after that
			if = {
				limit = {
					exists = scope:recipient.capital_county
					capital_county.duchy = {
						any_de_jure_county = {
							this = scope:recipient.capital_county
						}
					}
				}
				capital_county = {
					duchy = {
						save_scope_as = duchy_title_name
					}
				}
			}
			#You are a duke, name it after your duchy
			else_if = {
				limit = {
					primary_title = {
						tier = tier_duchy
						any_de_jure_county = {
							holder = scope:recipient
						}
					}
				}
				primary_title = {
					save_scope_as = duchy_title_name
				}
			}
			#Name after your capital duchy
			else = {
				capital_county = {
					duchy = {
						save_scope_as = duchy_title_name
					}
				}
			}
			create_confederation = {
				name = LEAGUE_KINGDOM_DUCHY_NAME
			}
			# Make sure to save what duchy was used to name the confederation, so that it can be referenced later when naming the elevated kingdom title
			scope:new_confederation = {
				set_variable = {
					name = duchy_title_name
					value = scope:duchy_title_name
				}
			}
		}

		## Make sure to save that this represents a "Defensive League"
		scope:new_confederation = {
			set_variable = {
				name = confed_type
				value = flag:CL_type_league
			}
		}
	}
	else = { # It is a Confederation being formed
		## With the relevant game rules, allow historical confederation names to appear
		# NOTE: Whenever adding a new historical confederation here, make sure to also add the appropriate entry in the above CL_determine_elevated_title_name effect
		if = { # Masmuda Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_marrakesh
							this = title:d_sous
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_marrakesh
							this = title:d_sous
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_masmuda_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_masmuda_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_masmuda_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_masmuda_confederacy
			}
		}
		else_if = { # Zenati Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_tlemcen
							this = title:d_tahert
							this = title:d_alger
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_tlemcen
							this = title:d_tahert
							this = title:d_alger
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_zenati_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_zenati_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_zenati_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_zenati_confederacy
			}
		}
		else_if = { # Sanhaja Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_tafilalt
							this = title:d_fes
							this = title:d_rif
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_tafilalt
							this = title:d_fes
							this = title:d_rif
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_sanhaja_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_sanhaja_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_sanhaja_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_sanhaja_confederacy
			}
		}
		else_if = { # Kabyle Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_bejaia
							this = title:d_zab
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_bejaia
							this = title:d_zab
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_kabyle_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_kabyle_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_kabyle_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_kabyle_confederacy
			}
		}
		else_if = { # Chaoui Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_kroumerie
							this = title:d_tunis
							this = title:d_kairouan
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_kroumerie
							this = title:d_tunis
							this = title:d_kairouan
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_chaoui_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_chaoui_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_chaoui_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_chaoui_confederacy
			}
		}
		else_if = { # Mozabite Confederacy
			limit = {
				# Need to have relevant game rule(s)
				OR = {
					has_game_rule = CL_historical_names_all
					has_game_rule = CL_historical_names_during_ck3
				}
				# Need to have relevant culture/heritage
				culture = { has_cultural_pillar = heritage_berber }
				scope:recipient.culture = { has_cultural_pillar = heritage_berber }
				# Need to be in appropriate area
				OR = {
					capital_county.duchy = {
						OR = {
							this = title:d_mzab
							this = title:d_touat
						}
					}
					scope:recipient.capital_county.duchy = {
						OR = {
							this = title:d_mzab
							this = title:d_touat
						}
					}
				}
				# Need to be a name not used before
				NOT = {
					is_target_in_global_variable_list = {
						name = CL_used_historical_names
						target = flag:cl_mozabite_confederacy
					}
				}
			}

			# Create Confederacy with Historical Name, and variable to indicate it
			create_confederation = {
				name = cl_mozabite_confederacy
			}
			scope:new_confederation = {
				set_variable = {
					name = historical_confed_league
					value = flag:cl_mozabite_confederacy
				}
			}
			add_to_global_variable_list = {
				name = CL_used_historical_names
				target = flag:cl_mozabite_confederacy
			}
		}
		## create culturally-named duchy title if you both have same culture
		else_if = {
			limit = {
				culture = {	
					this = scope:recipient.culture
				}
				NOT = {
					any_in_global_list = {
						variable = confederations
						has_variable = confederation_culture
						var:confederation_culture = scope:actor.culture
						has_variable = confed_type
						var:confed_type = flag:CL_type_confederation
					}
				}
			}
			culture = {	
				save_scope_as = confederation_culture
			}
			create_confederation = {
				name = CONFEDERATION_KINGDOM_CULTURE_NAME
			}
			scope:new_confederation = {
				set_variable = {
					name = confederation_culture
					value = scope:confederation_culture
				}
			}
		}
		## create faith-based confederation if characters have the same faith and meet certain conditions, and a confederation for the faith hasn't been created yet
		else_if = {
			limit = {
				faith = {	
					this = scope:recipient.faith
				}
				NOT = {
					any_in_global_list = {
						variable = confederations
						has_variable = confederation_faith
						var:confederation_faith = scope:actor.faith
						has_variable = confed_type
						var:confed_type = flag:CL_type_confederation
					}
				}
				CL_faith_based_confed_league_trigger = yes
			}
			faith = {	
				save_scope_as = confederation_faith
			}
			create_confederation = {
				name = CONFEDERATION_KINGDOM_FAITH_NAME
			}
			scope:new_confederation = {
				set_variable = {
					name = confederation_faith
					value = scope:confederation_faith
				}
			}
		}
		## Duchy title fallback
		else = {
			#You two are in the same duchy, name it after that
			if = {
				limit = {
					exists = scope:recipient.capital_county
					capital_county.duchy = {
						any_de_jure_county = {
							this = scope:recipient.capital_county
						}
					}
				}
				capital_county = {
					duchy = {
						save_scope_as = duchy_title_name
					}
				}
			}
			#You are a duke, name it after your duchy
			else_if = {
				limit = {
					primary_title = {
						tier = tier_duchy
						any_de_jure_county = {
							holder = scope:recipient
						}
					}
				}
				primary_title = {
					save_scope_as = duchy_title_name
				}
			}
			#Name after your capital duchy
			else = {
				capital_county = {
					duchy = {
						save_scope_as = duchy_title_name
					}
				}
			}
			create_confederation = {
				name = CONFEDERATION_KINGDOM_DUCHY_NAME
			}
			# Make sure to save what duchy was used to name the confederation, so that it can be referenced later when naming the elevated kingdom title
			scope:new_confederation = {
				set_variable = {
					name = duchy_title_name
					value = scope:duchy_title_name
				}
			}
		}

		## Make sure to save that this represents a "Confederation"
		scope:new_confederation = {
			set_variable = {
				name = confed_type
				value = flag:CL_type_confederation
			}
		}
	}
}
